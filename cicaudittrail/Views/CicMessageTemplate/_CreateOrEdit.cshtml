@model cicaudittrail.Models.CicMessageTemplate
@* This partial view defines form fields that will appear when creating and editing entities *@
@Styles.Render("~/Content/wysiwygcss")
@Scripts.Render("~/bundles/wysiwygjs")
<script type="text/javascript">
            $(document).ready(function () {
                $('#ContenuMail').summernote({
                    height: 300,                 // set editor height

                    minHeight: null,             // set minimum height of editor
                    maxHeight: null,             // set maximum height of editor

                    focus: true,                 // set focus to editable area after initializing summernote

                    toolbar: [
                    //[groupname, [button list]]

    ['style', ['bold', 'italic', 'underline', 'clear']],
    ['font', ['strikethrough']],
    ['fontsize', ['fontsize']],
    ['color', ['color']],
    ['para', ['ul', 'ol', 'paragraph']],
    ['height', ['height']]
  ]
                });
            });
</script>

<div class="form-group">
    <div class="editor-label">
        @Html.LabelFor(model => model.Code)
    </div>
    <div class="editor-field">
        @Html.TextBoxFor(model => model.Code, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Code, null, new { @class = "has-error" })
    </div>
</div>
<div class="form-group">
    <div class="editor-label">
        @Html.LabelFor(model => model.Libelle)
    </div>
    <div class="editor-field">
        @Html.TextBoxFor(model => model.Libelle, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Libelle, null, new { @class = "has-error" })
    </div>
</div>
<div class="form-group">
    <div class="editor-label">
        @Html.LabelFor(model => model.ObjetMail)
    </div>
    <div class="editor-field">
        @Html.TextBoxFor(model => model.ObjetMail, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.ObjetMail, null, new { @class = "has-error" })
    </div>
</div>
<div class="form-group">
    <div class="editor-label">
        @Html.LabelFor(model => model.ContenuMail)
    </div>
    <div class="editor-field">
        @Html.TextAreaFor(model => model.ContenuMail, new { @rows = 8, @class = "form-control textarea" })
        
       @* <textarea class="form-control textarea" id="ContenuMail" name="ContenuMail" rows="8">
					</textarea>*@
       
        @Html.ValidationMessageFor(model => model.ContenuMail, null, new { @class = "has-error" })
    </div>
</div>
